{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trabalho de Compiladores 1 \u2013 Equipe 12","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do projeto desenvolvido na disciplina Compiladores 1, ministrada pelo professor S\u00e9rgio Ant\u00f4nio Andrade de Freitas, no curso de Engenharia de Software da Universidade de Bras\u00edlia (UnB).</p>"},{"location":"#objetivo-do-projeto","title":"\ud83c\udfaf Objetivo do Projeto","text":"<p>Construir um compilador educacional que traduz um subconjunto da linguagem C++ para um formato intermedi\u00e1rio e, posteriormente, para JavaScript.</p> <p>O projeto ser\u00e1 desenvolvido de forma incremental, acompanhando as fases de um compilador:</p> <ol> <li>An\u00e1lise l\u00e9xica</li> <li>An\u00e1lise sint\u00e1tica</li> <li>An\u00e1lise sem\u00e2ntica</li> <li>Gera\u00e7\u00e3o de c\u00f3digo intermedi\u00e1rio</li> <li>Otimiza\u00e7\u00e3o</li> <li>Gera\u00e7\u00e3o de c\u00f3digo final</li> </ol>"},{"location":"#equipe","title":"\ud83d\udc65 Equipe","text":"<ul> <li>Ant\u00f4nio J\u00fanior</li> <li>Heyttor Augusto</li> <li>Jo\u00e3o Pedro Sampaio</li> <li>Lucas Heler</li> <li>Maciel J\u00fanior</li> </ul>"},{"location":"#estrutura-da-documentacao","title":"\ud83d\udcc2 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li>Escopo da Linguagem</li> </ul>"},{"location":"#historico-do-projeto","title":"\ud83d\udccc Hist\u00f3rico do Projeto","text":"<p>O desenvolvimento segue a abordagem PBL (Project Based Learning) e est\u00e1 organizado em sprints, com pontos de controle e apresenta\u00e7\u00f5es ao longo do semestre.</p>"},{"location":"escopo/","title":"Escopo da Linguagem (Projeto de Compilador)","text":"<p>Este documento define o subconjunto da linguagem C++ que ser\u00e1 incialmente suportado pelo compilador desenvolvido na disciplina Compiladores 1. O escopo foi planejado para ser vi\u00e1vel dentro do semestre e suficiente para todas as fases do compilador.</p> <p>Este escopo poder\u00e1 ser revisado e expandido ao longo da disciplina, conforme a evolu\u00e7\u00e3o do projeto e a capacidade da equipe em implementar novas features.</p>"},{"location":"escopo/#tipos-primitivos","title":"Tipos Primitivos","text":"Tipo Descri\u00e7\u00e3o Exemplos <code>int</code> N\u00fameros inteiros <code>10</code>, <code>42</code> <code>float</code> N\u00fameros de ponto flutuante <code>3.14</code>, <code>0.5</code> <code>bool</code> Valores l\u00f3gicos <code>true</code>, <code>false</code> <code>string</code> Cadeias de caracteres (texto) <code>\"texto\"</code>, <code>\"abc\"</code> <p>Observa\u00e7\u00e3o sobre <code>string</code></p> <p>No C++ real, cadeias de caracteres s\u00e3o representadas pela classe <code>std::string</code>, definida na biblioteca padr\u00e3o (STL). Isso implica em uso de namespaces (<code>std::</code>), inclus\u00e3o de headers (<code>&lt;string&gt;</code>) e toda a infraestrutura de classes da linguagem.</p> <p>Para simplifica\u00e7\u00e3o neste projeto, consideraremos <code>string</code> como um tipo primitivo, no mesmo n\u00edvel de <code>int</code>, <code>float</code> e <code>bool</code>. Assim, o compilador pode lidar com vari\u00e1veis e literais de string sem exigir suporte a namespaces, classes ou bibliotecas externas.</p> <p>Caso seja decidido expandir o escopo futuramente, poderemos ajustar a gram\u00e1tica para reconhecer <code>std::string</code>, mas isso traria maior complexidade (namespaces e classes), que est\u00e1 fora do escopo m\u00ednimo inicial.</p>"},{"location":"escopo/#identificadores-literais-e-comentarios","title":"Identificadores, Literais e Coment\u00e1rios","text":"Categoria Descri\u00e7\u00e3o Exemplos Identificadores Devem come\u00e7ar com letra ou <code>_</code>, seguidos de letras, d\u00edgitos ou <code>_</code> <code>x</code>, <code>contador</code>, <code>soma1</code> Literais Valores concretos escritos no c\u00f3digo <code>10</code>, <code>3.14</code>, <code>\"abc\"</code>, <code>true</code> Coment\u00e1rios Anota\u00e7\u00f5es ignoradas pelo compilador <code>// coment\u00e1rio</code> <code>/* coment\u00e1rio */</code>"},{"location":"escopo/#operadores","title":"Operadores","text":"Categoria Operadores Exemplos Aritm\u00e9ticos <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> <code>x + y</code>, <code>a * b</code> Relacionais <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code> <code>x == y</code>, <code>a &lt; b</code> L\u00f3gicos <code>&amp;&amp;</code>, <code>||</code>, <code>!</code> <code>(x &gt; 0 &amp;&amp; y &gt; 0)</code> Atribui\u00e7\u00e3o <code>=</code> <code>x = 10</code>"},{"location":"escopo/#declaracoes-de-variaveis","title":"Declara\u00e7\u00f5es de Vari\u00e1veis","text":""},{"location":"escopo/#declaracao-sem-inicializacao","title":"Declara\u00e7\u00e3o Sem Inicializa\u00e7\u00e3o","text":"<pre><code>int x;\nfloat y;\nbool ativo;\nstring nome;\n</code></pre>"},{"location":"escopo/#declaracao-com-inicializacao","title":"Declara\u00e7\u00e3o Com Inicializa\u00e7\u00e3o","text":"<pre><code>int x = 5;\nbool ativo = true;\nstring nome = \"teste\";\n</code></pre>"},{"location":"escopo/#atribuicoes-e-expressoes","title":"Atribui\u00e7\u00f5es e Express\u00f5es","text":"<pre><code>x = 10;\ny = x + 2.5;\nativo = (x &gt; y);\nnome = \"teste\";\n</code></pre>"},{"location":"escopo/#estruturas-de-controle-de-fluxo","title":"Estruturas de controle de fluxo","text":""},{"location":"escopo/#ifelse","title":"If/Else","text":"<pre><code>if (x &gt; 0) {\n    y = y + 1;\n} else {\n    y = 0;\n}\n</code></pre>"},{"location":"escopo/#while","title":"While","text":"<pre><code>while (y &lt; 10) {\n    y = y + 1;\n}\n</code></pre>"},{"location":"escopo/#for","title":"For","text":"<pre><code>for (int i = 0; i &lt; 10; i = i + 1) {\n    x = x + i;\n}\n</code></pre>"},{"location":"escopo/#funcoes","title":"Fun\u00e7\u00f5es","text":""},{"location":"escopo/#definicao","title":"Defini\u00e7\u00e3o","text":"<pre><code>int soma(int a, int b) {\n    return a + b;\n}\n</code></pre>"},{"location":"escopo/#chamada","title":"Chamada","text":"<pre><code>int r = soma(2, 3);\n</code></pre>"},{"location":"escopo/#palavras-chave-reservadas","title":"Palavras-chave reservadas","text":"<ul> <li><code>int</code></li> <li><code>float</code></li> <li><code>bool</code></li> <li><code>string</code></li> <li><code>if</code></li> <li><code>else</code></li> <li><code>while</code></li> <li><code>for</code></li> <li><code>true</code></li> <li><code>false</code></li> <li><code>return</code></li> <li><code>print</code></li> <li><code>read</code></li> </ul>"},{"location":"escopo/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Autor(es) Descri\u00e7\u00e3o 1.0 13/09/2025 Ant\u00f4nio J\u00fanior, Heyttor Augusto, Jo\u00e3o Pedro Sampaio, Lucas Heler, Maciel J\u00fanior Cria\u00e7\u00e3o inicial do documento de escopo"},{"location":"gramatica/","title":"Gram\u00e1tica Formal (CFG) do Subconjunto de C++","text":"<p>Este documento descreve a gram\u00e1tica livre de contexto (CFG) correspondente ao subconjunto da linguagem C++ definido no Escopo da Linguagem. Ela servir\u00e1 como base para o desenvolvimento do analisador sint\u00e1tico utilizando Bison.</p>"},{"location":"gramatica/#simbolo-inicial","title":"S\u00edmbolo inicial","text":"<pre><code>Program \u2192 DeclOrStmtList\n</code></pre> <pre><code>DeclOrStmtList \u2192 (DeclOrStmt)*\nDeclOrStmt     \u2192 Decl ';' | Stmt\n</code></pre>"},{"location":"gramatica/#declaracoes","title":"Declara\u00e7\u00f5es","text":""},{"location":"gramatica/#tipos-suportados","title":"Tipos suportados:","text":"<pre><code>Type \u2192 'int' | 'float' | 'bool' | 'string'\n</code></pre>"},{"location":"gramatica/#declaracoes_1","title":"Declara\u00e7\u00f5es:","text":"<pre><code>Decl \u2192 Type IDENTIFIER ( '=' Expr )?\n</code></pre>"},{"location":"gramatica/#exemplos-validos","title":"Exemplos v\u00e1lidos:","text":"<pre><code>int x;\nfloat y = 3.14;\nbool ativo = true;\nstring nome;\n</code></pre>"},{"location":"gramatica/#comandos","title":"Comandos","text":""},{"location":"gramatica/#blocos-e-lista-de-comandos","title":"Blocos e lista de comandos:","text":"<pre><code>Block   \u2192 '{' StmtList? '}'\nStmtList\u2192 (Stmt)+\n</code></pre>"},{"location":"gramatica/#comandos-possiveis","title":"Comandos poss\u00edveis:","text":"<pre><code>Stmt \u2192 Assign ';'\n     | If\n     | While\n     | For\n     | Expr ';'\n</code></pre>"},{"location":"gramatica/#atribuicoes","title":"Atribui\u00e7\u00f5es:","text":"<pre><code>Assign \u2192 IDENTIFIER '=' Expr\n</code></pre>"},{"location":"gramatica/#exemplos-validos_1","title":"Exemplos v\u00e1lidos:","text":"<pre><code>x = 10;\ny = x + 2.5;\nativo = (x &gt; y);\nnome = \"teste\";\n</code></pre>"},{"location":"gramatica/#ifelse","title":"If/Else:","text":"<pre><code>If \u2192 'if' '(' Expr ')' Stmt ('else' Stmt)?\n</code></pre>"},{"location":"gramatica/#exemplo-valido","title":"Exemplo v\u00e1lido:","text":"<pre><code>if (x &gt; 0) {\n    y = y + 1;\n} else {\n    y = 0;\n}\n</code></pre>"},{"location":"gramatica/#while","title":"While:","text":"<pre><code>While \u2192 'while' '(' Expr ')' Stmt\n</code></pre>"},{"location":"gramatica/#exemplo-valido_1","title":"Exemplo v\u00e1lido:","text":"<pre><code>while (y &lt; 10) {\n    y = y + 1;\n}\n</code></pre>"},{"location":"gramatica/#for","title":"For:","text":"<pre><code>For     \u2192 'for' '(' ForInit? ';' ForCond? ';' ForStep? ')' Stmt\nForInit \u2192 Decl | Assign\nForCond \u2192 Expr\nForStep \u2192 Assign\n</code></pre> <p>Exemplo v\u00e1lido: <pre><code>for (int i = 0; i &lt; 10; i = i + 1) {\n    soma = soma + i;\n}\n</code></pre></p>"},{"location":"gramatica/#precedencia-de-operadores","title":"Preced\u00eancia de Operadores","text":"<ol> <li><code>()</code> \u2014 Par\u00eanteses</li> <li><code>!</code>, <code>-</code> \u2014 Un\u00e1rios</li> <li><code>*</code>, <code>/</code> \u2014 Multiplicativos</li> <li><code>+</code>, <code>-</code> \u2014 Aditivos</li> <li><code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code> \u2014 Relacionais</li> <li><code>==</code>, <code>!=</code> \u2014 Igualdade</li> <li><code>&amp;&amp;</code> \u2014 L\u00f3gico AND</li> <li><code>||</code> \u2014 L\u00f3gico OR</li> </ol>"},{"location":"gramatica/#lexico-terminais","title":"L\u00e9xico (terminais)","text":"<ul> <li>Identificadores: <code>IDENTIFIER</code></li> <li>Literais:</li> <li><code>INT_LIT</code> \u2192 n\u00fameros inteiros (ex.: <code>10</code>, <code>42</code>)</li> <li><code>FLOAT_LIT</code> \u2192 n\u00fameros de ponto flutuante (ex.: <code>3.14</code>, <code>0.5</code>)</li> <li><code>STRING_LIT</code> \u2192 cadeias de caracteres entre aspas (ex.: <code>\"abc\"</code>)</li> <li><code>BOOL_LIT</code> \u2192 <code>true</code> | <code>false</code></li> <li>Palavras-chave: <code>int</code>, <code>float</code>, <code>bool</code>, <code>string</code>, <code>if</code>, <code>else</code>, <code>while</code>, <code>for</code></li> <li>S\u00edmbolos/operadores:   <code>= + - * / == != &lt; &gt; &lt;= &gt;= &amp;&amp; || ! ( ) { } ; ,</code></li> </ul>"},{"location":"gramatica/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Autor(es) Descri\u00e7\u00e3o 1.0 14/09/2025 Ant\u00f4nio J\u00fanior, Heyttor Augusto, Jo\u00e3o Pedro Sampaio, Lucas Heler, Maciel J\u00fanior Primeira vers\u00e3o da gram\u00e1tica formal"}]}